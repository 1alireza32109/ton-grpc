name: tvm-grpc release
on:
  workflow_dispatch:
#  push:
#    tags:
#      - 'tvm-grpc-v*'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build-bin:
    runs-on:
      group: "CPUBound"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: arduino/setup-protoc@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu
      - name: Install LLVM and Clang
        run: |
          wget https://apt.llvm.org/llvm.sh -O /tmp/llvm.sh && chmod +x /tmp/llvm.sh && sudo /tmp/llvm.sh 16
          sudo apt-get install --yes --no-install-recommends libsecp256k1-dev libsodium-dev libc++-16-dev libc++abi-16-dev
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-16 101
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-16 101

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Build mainnet version
        run: cargo build -v --bin tvm-grpc --target x86_64-unknown-linux-gnu --release
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
          CMAKE_C_COMPILER_LAUNCHER: "sccache"
          CMAKE_CXX_COMPILER_LAUNCHER: "sccache"
      - run: ldd ./target/x86_64-unknown-linux-gnu/release/tvm-grpc

      - name: Build testnet version
        run: cargo build -v --bin tvm-grpc --target x86_64-unknown-linux-gnu --release --features testnet
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
          CMAKE_C_COMPILER_LAUNCHER: "sccache"
          CMAKE_CXX_COMPILER_LAUNCHER: "sccache"
      - run: ldd ./target/x86_64-unknown-linux-gnu/release/tvm-grpc